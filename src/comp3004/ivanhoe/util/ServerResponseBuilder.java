package comp3004.ivanhoe.util;

import java.util.HashMap;

import org.json.simple.JSONObject;

import comp3004.ivanhoe.util.Config.ResponseType;

public class ServerResponseBuilder {

	// TODO: pass in a player and / or tournament object?
	public JSONObject buildResponse(ResponseType responseType) {
		
		HashMap<String, String> responseMap = new HashMap<String, String>();
		
		switch (responseType) {
		
		// responses to client requests
		// TODO: add parameter to indicate success or failure of client request
		case MAKE_MOVE:
			responseMap.put("response_type", "make_move");
			break;
		case QUIT:
			responseMap.put("response_type", "quit");
			break;
		
		// responses generated by game state
		case UPDATE_VIEW:
			responseMap.put("response_type", "update_view");
			// generate JSON representation of game state?
			break;
		case START_PLAYER_TURN:
			responseMap.put("response_type", "start_player_turn");
			break;
		case START_GAME:
			responseMap.put("response_type", "start_game");
			
			String hand = "[\"r3\", \"p2\", \"s3\", \"g3\", \"ma\"]";
			String display = "[]";
			String tournament_color = "red";
			
			// TOOD: include hands and displays for other players
			
			responseMap.put("hand", hand);
			responseMap.put("display", display);
			responseMap.put("color", tournament_color);
			break;
			
		case CONNECTION_ACCEPTED:
			responseMap.put("response_type", "connection_accepted");
			break;
		case CONNECTION_REJECTED:
			responseMap.put("response_type", "connection_rejected");
			break;
			
		}
		
		JSONObject response = new JSONObject(responseMap);
		return response;
		
	}
	
}
